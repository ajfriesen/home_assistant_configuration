# # Sonoff Basic
# switch:
#   - platform: mqtt
#     name: 'Bett Heizung'
#     command_topic: "cmnd/bed_heater/POWER"
#     state_topic: "stat/bed_heater/POWER"
#     availability_topic: "tele/bed_heater/LWT"
#     payload_on: "ON"
#     payload_off: "OFF"
#     payload_available: "online"
#     payload_not_available: "offline"
#     retain: false
#     qos: "2"


automation:
- alias: 'Turn off bed heater after certain time'
  trigger:
    platform: state
    entity_id: switch.bed_heater
    to: "on"
    for: '02:30:00'
  condition: []
  action:
  - service: switch.turn_off
    entity_id: switch.bed_heater

- alias: 'Start timer for bedheater'
  trigger:
    platform: state
    entity_id: switch.bed_heater
    from: "off"
    to: "on"
  condition: []
  action:
  - service: timer.start
    entity_id: timer.bed_heater

- alias: 'Stop bed heater after timer ended'
  trigger:
    platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.bed_heater
  condition: []
  action:
  - service: switch.turn_off
    entity_id: switch.bed_heater

- alias: 'Reset timer when bed heater turns off'
  trigger:
    platform: state
    entity_id: switch.bed_heater
    to: "off"
  condition: []
  action:
  - service: timer.cancel
    entity_id: timer.bed_heater


timer:
  bed_heater:
    name: "Timer Bettheizung"
    duration: '02:00:00'
    icon: mdi:radiator